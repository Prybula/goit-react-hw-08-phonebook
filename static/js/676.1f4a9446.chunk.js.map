{"version":3,"file":"static/js/676.1f4a9446.chunk.js","mappings":"qPAEaA,EAAeC,EAAAA,GAAAA,IAAH,+M,mBCEZC,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,WACE,sDAEE,kBACEK,KAAK,OACLC,KAAK,SACLC,SAAU,SAAAC,GACRL,GAASM,EAAAA,EAAAA,GAAeD,EAAEE,OAAOC,OAClC,QAKV,ECnBYC,EAAgBX,EAAAA,GAAAA,GAAH,yfCFbY,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAGvBC,EAAqB,SAAAL,GAAK,OAAIA,EAAMM,OAAOT,KAAjB,E,8BCI1BU,EAAc,WACzB,IAAMN,GAAWO,EAAAA,EAAAA,IAAYT,GACvBU,GAAaD,EAAAA,EAAAA,IAAYH,GACzBhB,GAAWC,EAAAA,EAAAA,MAEXoB,EAAmBT,EAASK,QAAO,SAAAK,GAAO,OAC9CA,EAAQnB,KAAKoB,cAAcC,SAASJ,EAAWG,cADD,IAQhD,OACE,SAACd,EAAD,UACGY,EAAiBI,KAAI,SAAAH,GACpB,OACE,gBAAqBI,UAAU,cAA/B,WACE,4BAAOJ,EAAQnB,KAAf,QACA,gCAAQmB,EAAQK,OAAhB,QACA,SAACC,EAAA,EAAD,CAASC,MAAM,SAAf,UACE,SAACC,EAAA,EAAD,CACEC,QAAS,WAbC,IAAAC,IAcQV,EAAQW,GAbtCjC,GAASkC,EAAAA,EAAAA,IAAcF,GAcV,EAHH,UAKE,SAACG,EAAA,EAAD,UATGb,EAAQW,GAcpB,KAGN,ECxCYG,EAAwBtC,EAAAA,GAAAA,KAAH,+yB,UCKrBuC,EAAiB,WAC5B,IAAMzB,GAAWO,EAAAA,EAAAA,IAAYT,GACvBV,GAAWC,EAAAA,EAAAA,MAuBjB,OACE,UAACmC,EAAD,CAAuBE,SAtBJ,SAAAjC,GACnB,IAAMkC,EAAOlC,EAAEE,OACfF,EAAEmC,iBAEF,IAAMlB,EAAU,CACdW,IAAIQ,EAAAA,EAAAA,IAAO,GACXtC,KAAMoC,EAAKG,SAASvC,KAAKK,MACzBmB,OAAQY,EAAKG,SAASf,OAAOnB,OAGfI,EAAS+B,MAAK,SAAAC,GAAE,OAAIA,EAAGzC,OAASmB,EAAQnB,IAAxB,IAG9B0C,MAAM,GAAD,OAAIvB,EAAQnB,KAAZ,kCAGPH,GAAS8C,EAAAA,EAAAA,IAAWxB,IAEpBiB,EAAKQ,QACN,EAGC,WACE,mBAAOrB,UAAU,QAAjB,WACE,oCACA,kBACExB,KAAK,OACLC,KAAK,OACL6C,QAAQ,yHACRnB,MAAM,yIACNoB,UAAQ,QAGZ,mBAAOvB,UAAU,QAAjB,WACE,sCACA,kBACExB,KAAK,MACLC,KAAK,SACL6C,QAAQ,yFACRnB,MAAM,+FACNoB,UAAQ,QAGZ,mBAAQ/C,KAAK,SAAb,2BAGL,ECxDD,EAA6B,oCAA7B,EAAyE,+BCG5DgD,EAAkB,WAC7B,IAEMC,GAFWhC,EAAAA,EAAAA,IAAYT,GAEN0C,QAAO,SAAAC,GAC5B,OAAQA,EAAO,CAChB,GAAE,GAEH,OACE,0BACE,eAAG3B,UAAW4B,EAAd,uBACW,iBAAM5B,UAAW4B,EAAjB,SAA6BH,IADxC,gBAKL,E,UCRc,SAASI,IACtB,IAAMC,GAAYrC,EAAAA,EAAAA,IAAYL,GACxBd,GAAWC,EAAAA,EAAAA,MAMjB,OAJAwD,EAAAA,EAAAA,YAAU,WACRzD,GAAS0D,EAAAA,EAAAA,MACV,GAAE,CAAC1D,KAGF,+BACE,UAAC2D,EAAA,EAAD,CAAWC,SAAS,KAApB,WACE,yBAAMJ,GAAa,4BACnB,SAACN,EAAD,KACA,SAACb,EAAD,KACA,SAACtC,EAAD,KACA,SAACmB,EAAD,QAIP,C","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contacts/selectors.jsx","components/ContactsList/ContactsList.jsx","components/FormAddContact/FormAddContact.styled.jsx","components/FormAddContact/FormAddContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsCounter/ContactsCounter.module.css?937e","components/ContactsCounter/ContactsCounter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterStyled = styled.div`\n  text-align: center;\n  color: #454545;\n  & input {\n    margin-top: 20px;\n    margin-left: 20px;\n    border: 2px solid #b9c4be;\n    border-radius: 2px;\n    height: 30px;\n  }\n`;\n","import { FilterStyled } from './Filter.styled';\nimport { filterContacts } from 'redux/contacts/FilterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FilterStyled>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => {\n            dispatch(filterContacts(e.target.value));\n          }}\n        />\n      </label>\n    </FilterStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactStyled = styled.ul`\n  margin-top: 30px;\n  text-align: center;\n  color: #454545;\n  & .contactItem {\n    margin-top: 10px;\n  }\n  & button {\n    margin-left: 20px;\n    min-width: 100px;\n    height: 40px;\n    font-size: 18px;\n    letter-spacing: 0.02em;\n    color: #000;\n    background-color: transparent;\n    border: 2px solid #47946a;\n    border-radius: 3px;\n    transition: background-color 250ms linear;\n  }\n  & button:hover {\n    color: #fff;\n    background-color: #47946a;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.IsLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredTerm = state => state.filter.value;\n","import React from 'react';\nimport { ContactStyled } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilteredTerm } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { IconButton, Tooltip } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterTerm = useSelector(selectFilteredTerm);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterTerm.toLowerCase())\n  );\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ContactStyled>\n      {filteredContacts.map(contact => {\n        return (\n          <li key={contact.id} className=\"contactItem\">\n            <span>{contact.name} </span>\n            <span> {contact.number} </span>\n            <Tooltip title=\"Delete\">\n              <IconButton\n                onClick={() => {\n                  onDeleteContact(contact.id);\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </li>\n        );\n      })}\n    </ContactStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledFormAddContacts = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 25px;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n  width: 400px;\n  border: 1px solid #454545;\n  & button {\n    align-self: center;\n    min-width: 200px;\n    height: 40px;\n    font-size: 18px;\n    letter-spacing: 0.02em;\n    color: #000;\n    background-color: transparent;\n    border: 2px solid #47946a;\n    border-radius: 3px;\n    transition: background-color 250ms linear;\n  }\n  & button:hover {\n    color: #fff;\n    background-color: #47946a;\n  }\n  & .label {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n  }\n  & input {\n    margin-top: 5px;\n    border: 2px solid #b9c4be;\n    border-radius: 2px;\n    height: 30px;\n  }\n`;\n","import React from 'react';\nimport { StyledFormAddContacts } from './FormAddContact.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const FormAddContact = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    const form = e.target;\n    e.preventDefault();\n\n    const contact = {\n      id: nanoid(6),\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    const isExist = contacts.some(el => el.name === contact.name);\n\n    if (isExist) {\n      alert(`${contact.name} is already in contact list.`);\n      return;\n    }\n    dispatch(addContact(contact));\n\n    form.reset();\n  };\n\n  return (\n    <StyledFormAddContacts onSubmit={handleSubmit}>\n      <label className=\"label\">\n        <span>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className=\"label\">\n        <span>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </StyledFormAddContacts>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"countsText\":\"ContactsCounter_countsText__6hfGt\",\"count\":\"ContactsCounter_count__6FiaG\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactsCounter.module.css';\n\nexport const ContactsCounter = () => {\n  const contacts = useSelector(selectContacts);\n\n  const count = contacts.reduce(acc => {\n    return (acc += 1);\n  }, 0);\n\n  return (\n    <div>\n      <p className={css.countsText}>\n        You have <span className={css.count}>{count}</span> contacts\n      </p>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { FormAddContact } from 'components/FormAddContact/FormAddContact';\nimport { ContactsCounter } from 'components/ContactsCounter/ContactsCounter';\nimport { Container } from '@mui/material';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <div>{isLoading && 'Request in progress...'}</div>\n        <ContactsCounter />\n        <FormAddContact />\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n"],"names":["FilterStyled","styled","Filter","dispatch","useDispatch","type","name","onChange","e","filterContacts","target","value","ContactStyled","selectContacts","state","contacts","items","selectIsLoading","IsLoading","selectFilteredTerm","filter","ContactList","useSelector","filterTerm","filteredContacts","contact","toLowerCase","includes","map","className","number","Tooltip","title","IconButton","onClick","contactId","id","deleteContact","Delete","StyledFormAddContacts","FormAddContact","onSubmit","form","preventDefault","nanoid","elements","some","el","alert","addContact","reset","pattern","required","ContactsCounter","count","reduce","acc","css","Contacts","isLoading","useEffect","fetchContacts","Container","maxWidth"],"sourceRoot":""}